{
  "version": 3,
  "sources": ["../src/runtimeHelper.ts", "../src/ast.ts", "../src/parser.ts", "../src/index.ts"],
  "sourcesContent": ["export const TO_DISPLAY_STRING = Symbol(`TO_DISPLAY_STRING`);\r\nexport const CREATE_TEXT_VNODE = Symbol(`CREATE_TEXT_VNODE`);\r\nexport const helperNameMaps = {\r\n  [TO_DISPLAY_STRING]: `toDisplayString`,\r\n  [CREATE_TEXT_VNODE]: `createTextVNode`,\r\n};\r\n", "import { CREATE_TEXT_VNODE } from \"./runtimeHelper\";\r\n\r\n// \u679A\u4E3E\u7C7B\u578B\u4E0D\u8D4B\u503C\uFF0C\u9ED8\u8BA4\u4ECE0\u5F00\u59CB\u9012\u589E\r\nexport enum NodeTypes {\r\n  ROOT,\r\n  ELEMENT,\r\n  TEXT,\r\n  COMMENT,\r\n  SIMPLE_EXPRESSION,\r\n  INTERPOLATION, // {{ }}\r\n  ATTRIBUTE, // 6\r\n  DIRECTIVE,\r\n  // containers\r\n  COMPOUND_EXPRESSION, // {{ name }} + 'abc'\r\n  IF,\r\n  IF_BRANCH,\r\n  FOR,\r\n  TEXT_CALL, // createVnode\r\n  // codegen\r\n  VNODE_CALL,\r\n  JS_CALL_EXPRESSION, // ()\r\n  JS_OBJECT_EXPRESSION,\r\n  JS_PROPERTY,\r\n  JS_ARRAY_EXPRESSION,\r\n  JS_FUNCTION_EXPRESSION,\r\n  JS_CONDITIONAL_EXPRESSION,\r\n  JS_CACHE_EXPRESSION,\r\n  // ssr codegen\r\n  JS_BLOCK_STATEMENT,\r\n  JS_TEMPLATE_LITERAL,\r\n  JS_IF_STATEMENT,\r\n  JS_ASSIGNMENT_EXPRESSION,\r\n  JS_SEQUENCE_EXPRESSION,\r\n  JS_RETURN_STATEMENT,\r\n}\r\n\r\nexport function createCallExpression(context, args) {\r\n  let name = context.helper(CREATE_TEXT_VNODE);\r\n  return {\r\n    // createTextVNode(\u5185\u5BB9\uFF0Ccode)\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    callee: name,\r\n    arguments: args,\r\n  };\r\n}\r\n", "import { NodeTypes } from \"./ast\";\r\n\r\nfunction createParserContext(content) {\r\n  return {\r\n    originalSource: content, // \u521D\u59CB\u7684content\uFF0C\u6C38\u8FDC\u4E0D\u53D8\r\n    source: content, // \u5B57\u7B26\u4E32\u4F1A\u4E0D\u505C\u7684\u51CF\u5C11\r\n    line: 1,\r\n    column: 1,\r\n    offset: 0,\r\n  };\r\n}\r\n/**\r\n * @description \u5224\u65AD\u89E3\u6790\u662F\u5426\u7ED3\u675F\r\n * @param context \u89E3\u6790\u7684\u4E0A\u4E0B\u6587\r\n * @returns \u662F\u5426\u7ED3\u675F\u7684\u5E03\u5C14\u503C\r\n */\r\nfunction isEnd(context, ancestors = []) {\r\n  const c = context.source;\r\n  if (c.startsWith(\"</\")) {\r\n    // \u68C0\u67E5\u662F\u5426\u5339\u914D\u5F53\u524D\u7684\u5F00\u59CB\u6807\u7B7E\r\n    for (let i = ancestors.length - 1; i >= 0; --i) {\r\n      if (c.startsWith(`</${ancestors[i]}`)) {\r\n        return true;\r\n      }\r\n    }\r\n    // \u5982\u679C\u6CA1\u6709\u5339\u914D\u5230\uFF0C\u8BF4\u660E\u95ED\u5408\u6807\u7B7E\u4E0D\u5408\u6CD5\r\n    console.error(`\u610F\u5916\u7684\u95ED\u5408\u6807\u7B7E: ${c}`);\r\n    return true; // \u505C\u6B62\u89E3\u6790\r\n  }\r\n  return !c; // source \u4E3A\u7A7A\uFF0C\u89E3\u6790\u7ED3\u675F\r\n}\r\n\r\nfunction advancePositionMutation(context, c, endIndex) {\r\n  let lineCount = 0; // \u7B2C\u51E0\u884C\r\n  let linePos = -1; // \u6362\u884C\u7684\u4F4D\u7F6E\u4FE1\u606F\r\n  for (let i = 0; i < endIndex; i++) {\r\n    if (c.charCodeAt(i) === 10) {\r\n      lineCount++;\r\n      linePos = i;\r\n    }\r\n  }\r\n  context.offset += endIndex;\r\n  context.line += lineCount;\r\n  context.column =\r\n    linePos === -1 ? context.column + endIndex : endIndex - linePos - 1;\r\n}\r\n/**\r\n * @description \u622A\u53D6\u4E0A\u4E0B\u6587\uFF0C\u5373\u66F4\u65B0context.source\r\n * @param context \u4E0A\u4E0B\u6587\r\n * @param endIndex \u622A\u53D6\u7684\u4F4D\u7F6E\r\n */\r\nfunction advanceBy(context, endIndex) {\r\n  let c = context.source;\r\n  // \u628A\u4E0A\u4E0B\u6587\u622A\u53D6\u6389\uFF08\u66F4\u65B0source\uFF09\r\n  advancePositionMutation(context, c, endIndex);\r\n  context.source = c.slice(endIndex);\r\n}\r\nfunction advanceBySpaces(context) {\r\n  const match = /^[ \\t\\r\\n]+/.exec(context.source);\r\n  if (match) {\r\n    // \u5220\u9664\u7A7A\u683C\r\n    advanceBy(context, match[0].length);\r\n  }\r\n}\r\n/**\r\n * @description \u83B7\u53D6\u5F53\u524D\u89E3\u6790\u4F4D\u7F6E\u7684\u5149\u6807\u4FE1\u606F\r\n * @param context \u89E3\u6790\u7684\u4E0A\u4E0B\u6587\r\n * @returns \u5F53\u524D\u5149\u6807\u4FE1\u606F\r\n */\r\nfunction getCursor(context) {\r\n  let { line, column, offset } = context;\r\n  return { line, column, offset };\r\n}\r\n/**\r\n * @description \u83B7\u53D6\u4ECE\u5F00\u59CB\u5230\u5F53\u524D\u7684\u4F4D\u7F6E\u4FE1\u606F\r\n * @param context \u89E3\u6790\u7684\u4E0A\u4E0B\u6587\r\n * @param start \u5F00\u59CB\u7684\u5149\u6807\u4FE1\u606F\r\n * @returns \u4F4D\u7F6E\u4FE1\u606F\r\n */\r\nfunction getSelection(context, start) {\r\n  const end = getCursor(context);\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset),\r\n  };\r\n}\r\n\r\nfunction parseAttributeValue(context) {\r\n  let quote = context.source[0];\r\n  const isQuoted = quote === `\"` || quote === `'`; // \u5224\u65AD\u5F15\u53F7\r\n  let content;\r\n  if (isQuoted) {\r\n    advanceBy(context, 1); // \u8DF3\u8FC7\u5F15\u53F7\r\n    const endIndex = context.source.indexOf(quote, 1); // \u627E\u5230\u7ED3\u675F\u7684\u4F4D\u7F6E\r\n    content = parseTextData(context, endIndex); // \u622A\u53D6\u5F15\u53F7\u5185\u7684\u5185\u5BB9\r\n    advanceBy(context, 1); // \u8DF3\u8FC7\u5F15\u53F7\r\n  } else {\r\n    // \u6CA1\u6709\u5F15\u53F7\u7684\u8BDD\r\n    content = context.source.match(/([^ \\t\\r\\n/>])+/)[1]; // \u53D6\u51FA\u5185\u5BB9\u5220\u9664\u5185\u5BB9\r\n    advanceBy(context, content.length); // \u5220\u9664\u53D6\u51FA\u7684\u5185\u5BB9\r\n    advanceBySpaces(context);\r\n  }\r\n  return content;\r\n}\r\n\r\nfunction parseAttribute(context) {\r\n  const start = getCursor(context);\r\n  let match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n  const name = match[0];\r\n  let value;\r\n  advanceBy(context, name.length);\r\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n    advanceBySpaces(context); // \u8DF3\u8FC7\u7B49\u53F7\u524D\u9762\u53EF\u80FD\u5B58\u5728\u7684\u7A7A\u683C\r\n    advanceBy(context, 1); // \u8DF3\u8FC7\u7B49\u53F7\r\n    advanceBySpaces(context); // \u8DF3\u8FC7\u7B49\u53F7\u540E\u9762\u53EF\u80FD\u5B58\u5728\u7684\u7A7A\u683C\r\n    value = parseAttributeValue(context);\r\n  }\r\n  let loc = getSelection(context, start);\r\n  return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name,\r\n    value: {\r\n      type: NodeTypes.TEXT,\r\n      content: value,\r\n      loc,\r\n    },\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\nfunction parseAttributes(context) {\r\n  const props = [];\r\n  while (context.source.length > 0 && !context.source.startsWith(\">\")) {\r\n    // \u4E0A\u4E0B\u6587\u672A\u89E3\u6790\u5B8C\u6BD5\uFF0C\u5E76\u4E14\u8FD8\u5728\u6807\u7B7E\u5185\r\n    props.push(parseAttribute(context));\r\n    advanceBySpaces(context);\r\n  }\r\n  return props;\r\n}\r\n\r\nfunction parseTag(context) {\r\n  const start = getCursor(context);\r\n  const match: any = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source);\r\n  const tag = match[1];\r\n  advanceBy(context, match[0].length); // \u622A\u53D6\u6389\u5339\u914D\u7684\u90E8\u5206\r\n  advanceBySpaces(context); // \u622A\u53D6\u6389\u7A7A\u683C\u907F\u514D <div   /> \u8FD9\u79CD\u60C5\u51B5\r\n\r\n  // \u5904\u7406\u5C5E\u6027 <div a=\"1\" b='1' />\r\n  let props = parseAttributes(context);\r\n\r\n  const isSelfClosing = context.source.startsWith(\"/>\"); // \u662F\u5426\u4E3A\u81EA\u95ED\u5408\u6807\u7B7E\r\n  if (isSelfClosing) {\r\n    advanceBy(context, 2); // \u662F\u81EA\u95ED\u5408\u6807\u7B7E\u7684\u8BDD\uFF0C\u8BF4\u660E\u53EA\u5269 />, \u6240\u4EE5\u622A\u53D6\u6389\u4E24\u4E2A\u5B57\u7B26\r\n  } else {\r\n    advanceBy(context, 1); // \u4E0D\u662F\u81EA\u95ED\u5408\u6807\u7B7E\u7684\u8BDD\uFF0C\u8BF4\u660E\u53EA\u5269 >, \u6240\u4EE5\u622A\u53D6\u6389\u4E00\u4E2A\u5B57\u7B26\r\n  }\r\n  return {\r\n    type: NodeTypes.ELEMENT,\r\n    tag,\r\n    isSelfClosing,\r\n    loc: getSelection(context, start),\r\n    props,\r\n  };\r\n}\r\nfunction parseElement(context, ancestors = []) {\r\n  const ele: any = parseTag(context); // \u89E3\u6790\u5F00\u59CB\u6807\u7B7E\r\n  ancestors.push(ele.tag); // \u5C06\u5F53\u524D\u6807\u7B7E\u52A0\u5165\u6808\r\n  const children = parseChildren(context, ancestors); // \u9012\u5F52\u89E3\u6790\u5B50\u8282\u70B9\r\n  ancestors.pop(); // \u5B50\u8282\u70B9\u89E3\u6790\u5B8C\u6BD5\u540E\uFF0C\u79FB\u9664\u5F53\u524D\u6807\u7B7E\r\n\r\n  if (context.source.startsWith(\"</\")) {\r\n    // \u68C0\u67E5\u95ED\u5408\u6807\u7B7E\u662F\u5426\u5339\u914D\r\n    const endTag = parseTag(context); // \u89E3\u6790\u95ED\u5408\u6807\u7B7E\r\n    if (endTag.tag !== ele.tag) {\r\n      console.error(\r\n        `\u6807\u7B7E <${ele.tag}> \u7684\u95ED\u5408\u6807\u7B7E </${endTag.tag}> \u4E0D\u5339\u914D\uFF0C\u4F4D\u7F6E: line ${context.line}, column ${context.column}`\r\n      );\r\n    }\r\n  } else {\r\n    console.error(`\u7F3A\u5931 <${ele.tag}> \u7684\u95ED\u5408\u6807\u7B7E`);\r\n  }\r\n\r\n  (ele as any).children = children;\r\n  (ele as any).loc = getSelection(context, ele.loc.start);\r\n  return ele;\r\n}\r\n\r\n/**\r\n * @description \u8FD4\u56DE\u6700\u77ED\u7684\u6587\u672C\u5185\u5BB9\r\n * @param context \u6587\u672C\u4E0A\u4E0B\u6587\r\n * @param endIndex \u8DDD\u79BB\u6700\u8FD1\u7684\u8BCD\u6CD5\r\n */\r\nfunction parseTextData(context, endIndex) {\r\n  const content = context.source.slice(0, endIndex);\r\n  advanceBy(context, endIndex);\r\n  return content;\r\n}\r\n/**\r\n * @description \u89E3\u6790\u6587\u672C\r\n * @param context \u4F20\u5165\u7684\u5269\u4F59\u7684\u4E0A\u4E0B\u6587\r\n * @returns \u8FD4\u56DE\u6700\u77ED\u7684\u6587\u672C\u5185\u5BB9\u8282\u70B9\r\n */\r\nfunction parseText(context) {\r\n  let tokens = [\"<\", \"{{\"]; // \u627E\u5F53\u524D\u79BB\u5F97\u6700\u8FD1\u7684\u8BCD\u6CD5\r\n  let endIndex = context.source.length; // \u5148\u5047\u8BBE\u627E\u4E0D\u5230\r\n  for (let i = 0; i < tokens.length; i++) {\r\n    const index = context.source.indexOf(tokens[i], 1); // \u7B2C\u4E00\u4E2A\u80AF\u5B9A\u4E0D\u7528\u627E\uFF0C\u56E0\u4E3A\u5C31\u662F\u81EA\u5DF1\u80AF\u5B9A\u662F\u6587\u672C\r\n    if (index !== -1 && endIndex > index) {\r\n      // \u627E\u5230\u5E76\u4E14\u5728\u540E\u9762\r\n      endIndex = index;\r\n    }\r\n  }\r\n  // 0 - endIndex \u4E3A\u6587\u672C\u5185\u5BB9\r\n  const content = parseTextData(context, endIndex);\r\n  return {\r\n    type: NodeTypes.TEXT,\r\n    content,\r\n  };\r\n}\r\n/**\r\n * @description \u89E3\u6790\u8868\u8FBE\u5F0F\r\n * @param context \u4F20\u5165\u7684\u5269\u4F59\u7684\u4E0A\u4E0B\u6587\r\n * @returns \u8FD4\u56DE\u8868\u8FBE\u5F0F\u8282\u70B9\r\n */\r\nfunction parseInterpolation(context) {\r\n  const start = getCursor(context);\r\n  const closeIndex = context.source.indexOf(\"}}\", 2); // \u4ECE\u7B2C\u4E8C\u4E2A\u5B57\u7B26\u5F00\u59CB\u67E5\u627E }}\r\n  if (closeIndex === -1) {\r\n    throw new Error(\r\n      `Unclosed interpolation at line ${context.line}, column ${context.column}`\r\n    );\r\n  }\r\n  advanceBy(context, 2); // \u8DF3\u8FC7 {{\r\n  const innerStart = getCursor(context);\r\n  const innerEnd = getCursor(context);\r\n  const rawContentLength = closeIndex - 2;\r\n  const rawContent = context.source.slice(0, rawContentLength);\r\n  const preTrimContent = parseTextData(context, rawContentLength);\r\n  const content = preTrimContent.trim();\r\n  advanceBy(context, 2); // \u8DF3\u8FC7 }}\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    content: {\r\n      type: NodeTypes.SIMPLE_EXPRESSION,\r\n      content,\r\n      loc: getSelection(context, innerStart),\r\n    },\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\nfunction parseChildren(context, ancestors = []) {\r\n  const nodes = [] as any;\r\n  while (!isEnd(context, ancestors)) {\r\n    const c = context.source; // \u73B0\u5728\u89E3\u6790\u7684\u5185\u5BB9\r\n    let node;\r\n    if (c.startsWith(\"{{\")) {\r\n      // {{}}\r\n      node = parseInterpolation(context);\r\n    } else if (c[0] === \"<\") {\r\n      // <div>\r\n      node = parseElement(context, ancestors);\r\n    } else {\r\n      // \u6587\u672C\r\n      node = parseText(context);\r\n    }\r\n\r\n    // \u6709\u9650\u72B6\u6001\u673A\r\n    nodes.push(node);\r\n  }\r\n\r\n  // \u89E3\u6790\u5B8C\u7ED3\u70B9\u540E\u53EF\u80FD\u5B58\u5728\u5F88\u591A\u7A7A\u7ED3\u70B9\uFF0C\u6240\u4EE5\u9700\u8981\u8FC7\u6EE4\u6389/\u538B\u7F29\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    let node = nodes[i];\r\n    if (node.type === NodeTypes.TEXT) {\r\n      if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n        nodes[i] = null; // \u5220\u9664\u7A7A\u683C\r\n      } else {\r\n        node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, \" \"); // \u5408\u5E76\u7A7A\u683C\r\n      }\r\n    }\r\n  }\r\n\r\n  return nodes.filter(Boolean);\r\n}\r\n/**\r\n * @description \u521B\u5EFAast\u8BED\u6CD5\u6811\u7684\u6839\u8282\u70B9\r\n * @param children \u5B50\u8282\u70B9\r\n * @returns ast\u8BED\u6CD5\u6811\u7684\u6839\u8282\u70B9\r\n */\r\nfunction createRoot(children) {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    children,\r\n  };\r\n}\r\nexport function parse(template) {\r\n  // \u6839\u636Etemplate\u4EA7\u751F\u4E00\u9897\u6811 line column offset\r\n  const context = createParserContext(template);\r\n\r\n  return createRoot(parseChildren(context, []));\r\n}\r\n", "// \u7F16\u8BD1\u4E3B\u8981\u5206\u4E3A\u4E09\u6B65\r\n// 1. \u89E3\u6790\u6A21\u677F\uFF1A\u89E3\u6790\u6A21\u677F\u5B57\u7B26\u4E32\uFF0C\u751F\u6210 AST \u8BED\u6CD5\u6811\r\n// 2. \u4F18\u5316 AST\uFF1A\u5BF9 AST \u8FDB\u884C\u4F18\u5316\uFF0C\u4F8B\u5982\u6807\u8BB0\u9759\u6001\u8282\u70B9\u3001\u9884\u5B57\u7B26\u5316\u7B49\u3002\r\n// 3. \u751F\u6210\u6E32\u67D3\u51FD\u6570\uFF1A\u5C06\u4F18\u5316\u540E\u7684 AST \u8F6C\u6362\u4E3A\u6E32\u67D3\u51FD\u6570\u7684\u4EE3\u7801\u3002\r\n\r\n// codegennode\uFF0C\u53D8\u91CF\u6587\u5B57\uFF0CtodisplatString \u5143\u7D20 createElementVnode createTextVnode\r\n// openBlock createElementBlock\r\n// -\u300B \u5B57\u7B26\u4E32\r\nimport { PatchFlags } from \"packages/shared/src/patchFlags\";\r\nimport { createCallExpression, NodeTypes } from \"./ast\";\r\nimport { parse } from \"./parser\";\r\nimport { TO_DISPLAY_STRING } from \"./runtimeHelper\";\r\n\r\n// dom\u7684\u904D\u5386\u65B9\u5F0F\uFF0C\u4E00\u822C\u662F\uD83C\uDF32\u7684\u904D\u5386\u65B9\u5F0F\uFF0C\u5148\u5E8F\u4E2D\u5E8F\u540E\u5E8F\r\n// -> \u5143\u7D20 -> \u6587\u672C -> \u6587\u672C\u5904\u7406\u540E -> \u5143\u7D20\u5904\u7406\u540E \u7EC4\u4EF6\u6302\u8F7D\u6D41\u7A0B\r\nfunction transformElement(node, context) {\r\n  // \u5904\u7406\u5143\u7D20\r\n  if (NodeTypes.ELEMENT === node.type) {\r\n    console.log(\"\u5904\u7406\u5143\u7D20\");\r\n\r\n    return function () {\r\n      console.log(\"\u5904\u7406\u5143\u7D20\u540E\u6267\u884C\");\r\n    };\r\n  }\r\n}\r\n\r\nfunction isText(node) {\r\n  return node.type === NodeTypes.TEXT || node.type === NodeTypes.INTERPOLATION;\r\n}\r\n\r\nfunction transformText(node, context) {\r\n  // \u5904\u7406\u6587\u672C\r\n  if (NodeTypes.ELEMENT === node.type || NodeTypes.ROOT === node.type) {\r\n    console.log(\"\u5904\u7406\u6587\u672C\");\r\n    // \u6CE8\u610F\u5904\u7406\u987A\u5E8F\uFF0C\u8981\u7B49\u5F85\u5B50\u8282\u70B9\u5168\u90E8\u5904\u7406\u540E\uFF0C\u518D\u8D4B\u503C\u7ED9\u7236\u5143\u7D20\r\n    return function () {\r\n      console.log(\"\u5904\u7406\u6587\u672C\u540E\u6267\u884C\");\r\n      const children = node.children;\r\n      let container = null;\r\n      let hasText = false;\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isText(child)) {\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j];\r\n            if (isText(next)) {\r\n              hasText = true;\r\n              if (!container) {\r\n                container = children[i] = {\r\n                  type: NodeTypes.COMPOUND_EXPRESSION,\r\n                  children: [child],\r\n                };\r\n              }\r\n              container.children.push(`+${next}`);\r\n              children.splice(j, 1);\r\n              j--;\r\n            } else {\r\n              container = null;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (!hasText || children.length === 1) {\r\n        return;\r\n      }\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n          const args = [];\r\n          args.push(child);\r\n          if (child.type !== NodeTypes.TEXT) {\r\n            args.push(PatchFlags.TEXT);\r\n          }\r\n          children[i] = {\r\n            type: NodeTypes.TEXT_CALL, // createTextVNode\r\n            content: child,\r\n            codegenNode: createCallExpression(context, args), // createTextVNode(\u5185\u5BB9\uFF0Ccode)\r\n          };\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nfunction transformExpression(node, context) {\r\n  // \u5904\u7406\u8868\u8FBE\u5F0F\r\n  if (NodeTypes.INTERPOLATION === node.type) {\r\n    node.content.content = `_ctx.${node.content.content}`;\r\n  }\r\n}\r\n\r\nfunction createTransformContext(root) {\r\n  const context = {\r\n    currentNode: root, // \u5F53\u524D\u8282\u70B9\r\n    parent: null, // \u7236\u8282\u70B9\r\n    transformNode: [transformElement, transformText, transformExpression],\r\n    // createElementVnode createTextVnode toDisplayString\r\n    helpers: new Map(), // \u751F\u6210\u7684\u8F85\u52A9\u51FD\u6570(\u4F7F\u7528set\u4E5F\u884C)\r\n    helper(name) {\r\n      let count = context.helpers.get(name) || 0;\r\n      context.helpers.set(name, count + 1);\r\n      return name;\r\n    },\r\n  };\r\n  return context;\r\n}\r\n\r\nfunction traverseNode(node, context) {\r\n  context.currentNode = node;\r\n  const transform = context.transformNode;\r\n  const exits = [];\r\n  for (let i = 0; i < transform.length; i++) {\r\n    let exit = transform[i](node, context);\r\n    exit && exits.push(exit);\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ROOT:\r\n    case NodeTypes.ELEMENT:\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        context.parent = node;\r\n        traverseNode(node.children[i], context);\r\n      }\r\n    case NodeTypes.INTERPOLATION:\r\n      context.helper(TO_DISPLAY_STRING);\r\n      break;\r\n  }\r\n  context.currentNode = node; // \u56E0\u4E3AtraverseNode \u4F1A\u5C06node\u53D8\u6210\u5B50\u8282\u70B9\uFF0C\u6240\u4EE5\u9700\u8981\u91CD\u65B0\u8D4B\u503C\r\n  let i = exits.length;\r\n  if (i > 0) {\r\n    // \u5012\u5E8F\u6267\u884C\r\n    while (i--) {\r\n      exits[i]();\r\n    }\r\n  }\r\n}\r\n\r\nfunction transform(ast) {\r\n  // \u7C7B\u4F3C\u4E8Ebabel babel-traverse\r\n  const context = createTransformContext(ast);\r\n\r\n  traverseNode(ast, context);\r\n  ast.helpers = [...context.helpers.keys()];\r\n}\r\n\r\nfunction compile(template: string) {\r\n  const ast = parse(template);\r\n  // \u8FDB\u884C\u4EE3\u7801\u7684\u8F6C\u5316\r\n  transform(ast);\r\n}\r\n\r\nexport { parse, compile };\r\n"],
  "mappings": "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",
  "names": ["transform", "i"]
}
